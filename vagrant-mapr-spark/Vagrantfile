# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "mkieboom/mapr-spark"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  config.vm.network "forwarded_port", guest: 111, host: 111
  config.vm.network "forwarded_port", guest: 123, host: 123
  config.vm.network "forwarded_port", guest: 389, host: 389
  config.vm.network "forwarded_port", guest: 636, host: 636
  config.vm.network "forwarded_port", guest: 1111, host: 1111
  config.vm.network "forwarded_port", guest: 2049, host: 2049
  config.vm.network "forwarded_port", guest: 2888, host: 2888
  config.vm.network "forwarded_port", guest: 3306, host: 3306
  config.vm.network "forwarded_port", guest: 3888, host: 3888
  config.vm.network "forwarded_port", guest: 4040, host: 4040
  config.vm.network "forwarded_port", guest: 5181, host: 5181
  config.vm.network "forwarded_port", guest: 5660, host: 5660
  config.vm.network "forwarded_port", guest: 6660, host: 6660
  config.vm.network "forwarded_port", guest: 7077, host: 7077
  config.vm.network "forwarded_port", guest: 7220, host: 7220
  config.vm.network "forwarded_port", guest: 7221, host: 7221
  config.vm.network "forwarded_port", guest: 7222, host: 7222
  config.vm.network "forwarded_port", guest: 7443, host: 7443
  config.vm.network "forwarded_port", guest: 7660, host: 7660
  config.vm.network "forwarded_port", guest: 8000, host: 8000
  config.vm.network "forwarded_port", guest: 8002, host: 8002
  config.vm.network "forwarded_port", guest: 8030, host: 8030
  config.vm.network "forwarded_port", guest: 8031, host: 8031
  config.vm.network "forwarded_port", guest: 8032, host: 8032
  config.vm.network "forwarded_port", guest: 8033, host: 8033
  config.vm.network "forwarded_port", guest: 8040, host: 8040
  config.vm.network "forwarded_port", guest: 8041, host: 8041
  config.vm.network "forwarded_port", guest: 8042, host: 8042
  config.vm.network "forwarded_port", guest: 8044, host: 8044
  config.vm.network "forwarded_port", guest: 8047, host: 8047
  config.vm.network "forwarded_port", guest: 8080, host: 8080
  config.vm.network "forwarded_port", guest: 8081, host: 8081
  config.vm.network "forwarded_port", guest: 8088, host: 8088
  config.vm.network "forwarded_port", guest: 8090, host: 8090
  config.vm.network "forwarded_port", guest: 8443, host: 8443
  config.vm.network "forwarded_port", guest: 8888, host: 8888
  config.vm.network "forwarded_port", guest: 9001, host: 9001
  config.vm.network "forwarded_port", guest: 9083, host: 9083
  config.vm.network "forwarded_port", guest: 9090, host: 9090
  config.vm.network "forwarded_port", guest: 9443, host: 9443
  config.vm.network "forwarded_port", guest: 9997, host: 9997
  config.vm.network "forwarded_port", guest: 9997, host: 9997
  config.vm.network "forwarded_port", guest: 9998, host: 9998
  config.vm.network "forwarded_port", guest: 9998, host: 9998
  config.vm.network "forwarded_port", guest: 10000, host: 10000
  config.vm.network "forwarded_port", guest: 10001, host: 10001
  config.vm.network "forwarded_port", guest: 10020, host: 10020
  config.vm.network "forwarded_port", guest: 11000, host: 11000
  config.vm.network "forwarded_port", guest: 12000, host: 12000
  config.vm.network "forwarded_port", guest: 13562, host: 13562
  config.vm.network "forwarded_port", guest: 14000, host: 14000
  config.vm.network "forwarded_port", guest: 18080, host: 18080
  config.vm.network "forwarded_port", guest: 19888, host: 19888
  config.vm.network "forwarded_port", guest: 19890, host: 19890
  config.vm.network "forwarded_port", guest: 21000, host: 21000
  config.vm.network "forwarded_port", guest: 21050, host: 21050
  config.vm.network "forwarded_port", guest: 25000, host: 25000
  config.vm.network "forwarded_port", guest: 25010, host: 25010
  config.vm.network "forwarded_port", guest: 25020, host: 25020
  config.vm.network "forwarded_port", guest: 31010, host: 31010
  config.vm.network "forwarded_port", guest: 31011, host: 31011
  config.vm.network "forwarded_port", guest: 31012, host: 31012
  config.vm.network "forwarded_port", guest: 46655, host: 46655
  config.vm.network "forwarded_port", guest: 50030, host: 50030
  config.vm.network "forwarded_port", guest: 50060, host: 50060
  config.vm.network "forwarded_port", guest: 60000, host: 60000
  config.vm.network "forwarded_port", guest: 60010, host: 60010
  config.vm.network "forwarded_port", guest: 60020, host: 60020

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
